#!/usr/bin/env bash

set -e
set -u

function run {
    local log_file="last_log.log"
    (start=$(date +%s%N); "$@" &> ${log_file} && stop=$(date +%s%N) && time=$(echo "scale=4 ; $(((stop-start))) / 1000000000.0" | bc) && echo "[ OK ] (${time}s) $*") || ( echo "[ FAILED ] $*" ; cat ${log_file} ; exit 1 )
}

if [ $# -lt 6 ]
then
  echo "usage: $0 <nsamples> <sourcefile> <targetfile> <output_transfo> -transformation <init_transfo> [<minctracc_options>]"
  exit 1
fi

# TODO: improve option parsing
nsamples=$1
shift

sourcefile=$1
targetfile=$2
output_transfo=$3
init_transfo=$5 ## BE CAREFUL -transformation is $4

temptransfo="temp_transfo.xfm"

shift
shift
shift
shift
shift

transfos=""
for i in $(seq 1 ${nsamples})
do
  echo
  echo "> Iteration $i"
  run rm -f ${temptransfo}
  run noise_transfo.py ${init_transfo} ${temptransfo} 0.005 0.00005 # 0.0005 0.000005 --less var # 0.1 0.001 -- more var# 0.005 0.00005 --good from vol 13
  run minctracc ${sourcefile} ${targetfile} ${output_transfo} -transformation ${temptransfo} $* # see 'shift' above
  
  bak_transfo="$(basename ${output_transfo} .xfm).${i}.xfm"
  run cp ${output_transfo} ${bak_transfo}
  transfos="${transfos} ${bak_transfo}"
  # Average transformations
#  run mean_transfos.py ${transfos} ${output_transfo}
  # Get variance  
#  var=$(grep mean last_log.log | awk -F ';' '{print $2}' | awk '{print $NF}')
#  echo "Variance: $var"
done

# resample in transfos
nresample=100
means=""
echo -n "Resampling"
for resample in $(seq 1 ${nresample})
do
    echo -n "." 
    resample_transfos=""
    for i in $(seq 1 ${nsamples})
    do
	# pick a random transfo
	randint=$(echo $(($RANDOM % ${nsamples} + 1)))
	picked=$(echo ${transfos} | awk -v N=${randint} '{print $N}')
	resample_transfos="${resample_transfos} ${picked}"
    done
    mean_resamples=mean.${resample}.xfm
    # mean of resamples
    mean_transfos.py ${resample_transfos} ${mean_resamples}
    means="${means} ${mean_resamples}"
done
echo
# average over all resamples means
run mean_transfos.py ${means} ${output_transfo}

